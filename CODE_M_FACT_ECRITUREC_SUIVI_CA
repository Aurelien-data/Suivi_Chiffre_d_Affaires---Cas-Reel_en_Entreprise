let
    Source = Odbc.DataSource("dsn=SAGE_COMPTA", [HierarchicalNavigation=true]),
    ERVENT_Database = Source{[Name="ERVENT",Kind="Database"]}[Data],
    dbo_Schema = ERVENT_Database{[Name="dbo",Kind="Schema"]}[Data],
    F_ECRITUREC_Table = dbo_Schema{[Name="F_ECRITUREC",Kind="Table"]}[Data],
    #"Autres colonnes supprimées" = Table.SelectColumns(F_ECRITUREC_Table,{"JO_Num", "EC_No", "JM_Date", "EC_Date", "EC_RefPiece", "CG_Num", "CT_Num", "EC_Intitule", "EC_Echeance", "EC_Montant", "EC_Lettrage", "EC_DateRegle","EC_Sens"}),
    #"Type modifié" = Table.TransformColumnTypes(#"Autres colonnes supprimées",{{"JM_Date", type date}, {"EC_Date", type date}, {"EC_Echeance", type date}, {"EC_DateRegle", type date}, {"EC_Sens", Int64.Type}}),
    #"Colonne Sous_Traitance_Chantier" = Table.AddColumn(#"Type modifié", "Sous_Traitance_Chantier", each
Text.Contains([CG_Num], "A"),
type logical
),
    #"Colonne EC Chantier" = Table.AddColumn(#"Colonne Sous_Traitance_Chantier", "EC_Chantier", each
if [Sous_Traitance_Chantier] = false then "FOURNI"
else if [Sous_Traitance_Chantier] = true then "FOURNI POSE"
else null,
type text
),
    #"Colonnes supprimées" = Table.RemoveColumns(#"Colonne EC Chantier",{"Sous_Traitance_Chantier"}),
    #"Colonne Débit Crédit" = Table.AddColumn(#"Colonnes supprimées", "Debit_Credit", each
if [EC_Sens] = 0 then "Débit"
else if [EC_Sens] = 1 then "Crédit"
else null,
type text
),
    #"Colonne EC Sens supprimée" = Table.RemoveColumns(#"Colonne Débit Crédit",{"EC_Sens"}),
    #"Colonnes renommées" = Table.RenameColumns(#"Colonne EC Sens supprimée", {{"JO_Num", "Journal"}, 
{"EC_No", "ID_EC"}, 
{"JM_Date", "Date_Periode_Comptable"},
{"CG_Num", "Numero_Compte_Comptable"},
{"CT_Num", "Nom_du_Tiers"},
{"EC_Intitule", "Intitule_EC"},
{"EC_RefPiece", "Numero_Facture"}
}),
    #"Colonne Date analyse" = Table.AddColumn(
    #"Colonnes renommées",
    "Date_Analyse",
    each if [Date_Periode_Comptable] <> null then [Date_Periode_Comptable] else [EC_Date],
    type date
),
    #"Colonne Description Journal" = Table.AddColumn(
    #"Colonne Date analyse",
    "Description_Journal",
    each
        if [Journal] = "ACH" then "ACHAT" else
        if [Journal] = "AEC" then "AUDIT EXPERTISE COMPTABLE" else
        if [Journal] = "AN" then "A NOUVEAU" else
        if [Journal] = "BPSO" then "BANQUE" else
        if [Journal] = "CAI" then "CAISSE" else
        if [Journal] = "HSBC" then "BANQUE" else
        if [Journal] = "LCL" then "BANQUE" else
        if [Journal] = "OD" then "OPERATIONS DIVERSES" else
        if [Journal] = "ODL" then "OPERATIONS DIVERSES DE LETTRAGE" else
        if [Journal] = "ODV" then "OPERATIONS DIVERSES" else
        if [Journal] = "SG" then "BANQUE" else
        if [Journal] = "VTE" then "VENTE" else null,
    type text
),
    #"Requêtes fusionnées" = Table.NestedJoin(#"Colonne Description Journal", {"Numero_Compte_Comptable"}, PCG_ERVENT, {"Numero_Compte"}, "PCG_ERVENT", JoinKind.LeftOuter),
    #"PCG_ERVENT développé" = Table.ExpandTableColumn(#"Requêtes fusionnées", "PCG_ERVENT", {"Intitule_Compte", "Nature_Compte"}, {"Intitule_Compte", "Nature_Compte"}),
    #"Texte en majuscules" = Table.TransformColumns(#"PCG_ERVENT développé",{{"Nature_Compte", Text.Upper, type text}, {"Debit_Credit", Text.Upper, type text}}),
    #"Colonne Montant Facture" = Table.AddColumn(#"Texte en majuscules", "Montant_Facture", each 
if [Debit_Credit] = "DÉBIT" then [EC_Montant] *(-1)
else [EC_Montant],
type number
),
    #"Colonne Nom du Tiers remplie vers le bas" = Table.FillDown(#"Colonne Montant Facture",{"Nom_du_Tiers"}),
    #"Colonne Nom du Tiers clean" = Table.AddColumn(#"Colonne Nom du Tiers remplie vers le bas", "Nom_du_Tiers_Clean", each Text.RemoveRange([Nom_du_Tiers], 0), type text),
    #"Requêtes fusionnées2" = Table.NestedJoin(#"Colonne Nom du Tiers clean", {"Nom_du_Tiers_Clean"}, TIERS_A_EXCLURE, {"Nom_du_Tiers_a_Exclure"}, "Tiers_a_exclure", JoinKind.LeftOuter),
    #"Tiers_a_exclure développé" = Table.ExpandTableColumn(#"Requêtes fusionnées2", "Tiers_a_exclure", {"Statut_Tiers"}, {"Statut_Tiers"}),
    #"Colonne Compte Fournisseur" = Table.AddColumn(#"Tiers_a_exclure développé", "Compte_Fournisseur", each
if Text.StartsWith(Text.From([Numero_Compte_Comptable]), "401")
then "FOURNISSEUR"
else null,
type text
),
    #"Colonne Compte Client" = Table.AddColumn(#"Colonne Compte Fournisseur", "Compte_Client", each
if Text.StartsWith(Text.From([Numero_Compte_Comptable]), "411")
then "CLIENT"
else null,
type text
),
    #"Colonne Secteurs" = Table.AddColumn(#"Colonne Compte Client", "Secteurs", each 
if [Numero_Compte_Comptable] = "70100000" then "ATELIER" 
else if [Numero_Compte_Comptable] = "701A0000" then "ATELIER"
else if [Numero_Compte_Comptable] = "70100001" then "ATELIER" 
else if [Numero_Compte_Comptable] = "701A0001" then "ATELIER"
else if [Numero_Compte_Comptable] = "70100002" then "ATELIER" 
else if [Numero_Compte_Comptable] = "701A0002" then "ATELIER"
else if [Numero_Compte_Comptable] = "70100003" then "ATELIER" 
else if [Numero_Compte_Comptable] = "70100004" then "ATELIER" 
else if [Numero_Compte_Comptable] = "70100005" then "ATELIER"
else if [Numero_Compte_Comptable] = "70700000" then "NEGOCE"
else if [Numero_Compte_Comptable] = "707A0000" then "NEGOCE" 
else if [Numero_Compte_Comptable] = "70700010" then "NEGOCE"
else if [Numero_Compte_Comptable] = "707A0010" then "NEGOCE" 
else if [Numero_Compte_Comptable] = "70700101" then "NEGOCE"
else if [Numero_Compte_Comptable] = "707A0101" then "NEGOCE" 
else if [Numero_Compte_Comptable] = "70700102" then "NEGOCE"
else if [Numero_Compte_Comptable] = "707A0102" then "NEGOCE" 
else if [Numero_Compte_Comptable] = "70700103" then "NEGOCE"
else if [Numero_Compte_Comptable] = "707A0103" then "NEGOCE" 
else if [Numero_Compte_Comptable] = "70700104" then "NEGOCE"
else if [Numero_Compte_Comptable] = "707A0104" then "NEGOCE" 
else if [Numero_Compte_Comptable] = "70600010" then "POSE"
else if [Numero_Compte_Comptable] = "706A0010" then "POSE" 
else if [Numero_Compte_Comptable] = "70600107" then "POSE"
else if [Numero_Compte_Comptable] = "706A0107" then "POSE" 
else if [Numero_Compte_Comptable] = "70600000" then "POSE"
else if [Numero_Compte_Comptable] = "70600070" then "POSE"
else if [Numero_Compte_Comptable] = "706A0102" then "POSE"
else if [Numero_Compte_Comptable] = "70810000" then "TRANSPORT"
else if [Numero_Compte_Comptable] = "7081A000" then "TRANSPORT" 
else null,
type text),
    #"Colonne Description Compte Produit" = Table.AddColumn(#"Colonne Secteurs", "Description_Compte_Produit", each 
if [Numero_Compte_Comptable] = "70100000" then "RECT."
else if [Numero_Compte_Comptable] = "701A0000" then "RECT." 
else if [Numero_Compte_Comptable] = "70100001" then "PLENUMS"
else if [Numero_Compte_Comptable] = "701A0001" then "PLENUMS"
else if [Numero_Compte_Comptable] = "70100002" then "CIRC."
else if [Numero_Compte_Comptable] = "701A0002" then "CIRC." 
else if [Numero_Compte_Comptable] = "70100003" then "GAINE_ISOLEE" 
else if [Numero_Compte_Comptable] = "70100004" then "PLENUM_SALUS" 
else if [Numero_Compte_Comptable] = "70100005" then "MVN" 
else if [Numero_Compte_Comptable] = "70700000" then "VENTE_DE_MARCHANDISES"
else if [Numero_Compte_Comptable] = "707A0000" then "VENTE_DE_MARCHANDISES" 
else if [Numero_Compte_Comptable] = "70700010" then "ACCESSOIRES_CIRC."
else if [Numero_Compte_Comptable] = "707A0010" then "ACCESSOIRES_CIRC." 
else if [Numero_Compte_Comptable] = "70700101" then "DIF_BOU"
else if [Numero_Compte_Comptable] = "707A0101" then "DIF_BOU" 
else if [Numero_Compte_Comptable] = "70700102" then "ISOLANT"
else if [Numero_Compte_Comptable] = "707A0102" then "ISOLANT" 
else if [Numero_Compte_Comptable] = "70700103" then "ACCESSOIRES_MONTAGE"
else if [Numero_Compte_Comptable] = "707A0103" then "ACCESSOIRES_MONTAGE" 
else if [Numero_Compte_Comptable] = "70700104" then "FLEXIBLES"
else if [Numero_Compte_Comptable] = "707A0104" then "FLEXIBLES" 
else if [Numero_Compte_Comptable] = "70600010" then "COMPTE_HEURES"
else if [Numero_Compte_Comptable] = "706A0010" then "COMPTE_HEURES"
else if [Numero_Compte_Comptable] = "706A0102" then "PRESTATIONS_DE_SERVICES" 
else if [Numero_Compte_Comptable] = "70600107" then "LOCATION_MATERIEL_LEVAGE"
else if [Numero_Compte_Comptable] = "706A0107" then "LOCATION_MATERIEL_LEVAGE"
else if [Numero_Compte_Comptable] = "70600070" then "LOCATION_MATERIEL_LEVAGE"
else if [Numero_Compte_Comptable] = "70810000" then "TRANSPORT"
else if [Numero_Compte_Comptable] = "7081A000" then "TRANSPORT"
else if [Numero_Compte_Comptable] = "70830000" then "REVENTE_DECHETS_TOLES" 
else if [Numero_Compte_Comptable] = "70600000" then "PRESTATION_DE_SERVICES" 
else null,
type text),
    #"Colonne ID_EC_Chantier" = Table.AddColumn(#"Colonne Description Compte Produit", "ID_EC_Chantier", each
if [EC_Chantier] = "FOURNI" then 1
else if [EC_Chantier] = "FOURNI POSE" then 2
else null,
Int64.Type
),
    #"Colonne EC Chantier supprimée" = Table.RemoveColumns(#"Colonne ID_EC_Chantier",{"EC_Chantier"}),
    #"Colonne ID_Débit_Crédit" = Table.AddColumn(#"Colonne EC Chantier supprimée", "ID_Debit_Credit", each
if [Debit_Credit] = "CRÉDIT" then 1
else if [Debit_Credit] = "DÉBIT" then 2
else null,
Int64.Type
),
    #"Colonnes Débit Crédit supprimée" = Table.RemoveColumns(#"Colonne ID_Débit_Crédit",{"Debit_Credit"}),
    #"Colonne ID_Description_Journal" = Table.AddColumn(#"Colonnes Débit Crédit supprimée", "ID_Description_Journal", each
if [Description_Journal] = "ACHAT" then 1
else if [Description_Journal] = "AUDIT EXPERTISE COMPTABLE" then 2
else if [Description_Journal] = "A NOUVEAU" then 3
else if [Description_Journal] = "BANQUE" then 4
else if [Description_Journal] = "CAISSE" then 5
else if [Description_Journal] = "OPERATIONS DIVERSES" then 6
else if [Description_Journal] = "OPERATIONS DIVERSES DE LETTRAGE" then 7
else if [Description_Journal] = "VENTE" then 8
else null,
Int64.Type
),
    #"Colonne Description_Journal supprimée" = Table.RemoveColumns(#"Colonne ID_Description_Journal",{"Description_Journal"}),
    #"Colonne ID_Nature_Compte" = Table.AddColumn(#"Colonne Description_Journal supprimée", "ID_Nature_Compte", each
if [Nature_Compte] = "AMORTIS./PROVISION" then 1
else if [Nature_Compte] = "AUCUNE" then 2
else if [Nature_Compte] = "BANQUE" then 3
else if [Nature_Compte] = "CAISSE" then 4
else if [Nature_Compte] = "CAPITAUX" then 5
else if [Nature_Compte] = "CHARGE" then 6
else if [Nature_Compte] = "CLIENT" then 7
else if [Nature_Compte] = "FOURNISSEUR" then 8
else if [Nature_Compte] = "IMMOBILISATION" then 9
else if [Nature_Compte] = "PRODUIT" then 10
else if [Nature_Compte] = "RÉSULTAT-BILAN" then 11
else if [Nature_Compte] = "RÉSULTAT-GESTION" then 12
else if [Nature_Compte] = "SALARIÉ" then 13
else if [Nature_Compte] = "STOCK" then 14
else if [Nature_Compte] = "TITRE" then 15
else "Compte non identifié",
Int64.Type
),
    #"Colonne Nature_Compte supprimée" = Table.RemoveColumns(#"Colonne ID_Nature_Compte",{"Nature_Compte"}),
    #"Colonne ID_Secteurs" = Table.AddColumn(#"Colonne Nature_Compte supprimée", "ID_Secteurs", each
if [Secteurs] = "ATELIER" then 1
else if [Secteurs] = "NEGOCE" then 2
else if [Secteurs] = "POSE" then 3
else if [Secteurs] = "TRANSPORT" then 4
else null,
Int64.Type
),
    #"Colonne Secteurs supprimée" = Table.RemoveColumns(#"Colonne ID_Secteurs",{"Secteurs"}),
    #"Colonne ID_Description_Compte_Produit" = Table.AddColumn(#"Colonne Secteurs supprimée", "ID_Description_Compte_Produit", each 
if [Description_Compte_Produit] = "ACCESSOIRES_CIRC." then 1
else if [Description_Compte_Produit] = "ACCESSOIRES_MONTAGE" then 2
else if [Description_Compte_Produit] = "CIRC." then 3
else if [Description_Compte_Produit] = "COMPTE_HEURES" then 4
else if [Description_Compte_Produit] = "DIF_BOU" then 5
else if [Description_Compte_Produit] = "FLEXIBLES" then 6
else if [Description_Compte_Produit] = "GAINE_ISOLEE" then 7
else if [Description_Compte_Produit] = "ISOLANT" then 8
else if [Description_Compte_Produit] = "LOCATION_MATERIEL_LEVAGE" then 9
else if [Description_Compte_Produit] = "MVN" then 10
else if [Description_Compte_Produit] = "PLENUM_SALUS" then 11
else if [Description_Compte_Produit] = "PLENUMS" then 12
else if [Description_Compte_Produit] = "PRESTATION_DE_SERVICES" then 13
else if [Description_Compte_Produit] = "PRESTATIONS_DE_SERVICES" then 14
else if [Description_Compte_Produit] = "RECT." then 15
else if [Description_Compte_Produit] = "REVENTE_DECHETS_TOLES" then 16
else if [Description_Compte_Produit] = "TRANSPORT" then 17
else if [Description_Compte_Produit] = "VENTE_DE_MARCHANDISES" then 18
else null,
Int64.Type
),
    #"Colonne Description_Compte_Produit supprimée" = Table.RemoveColumns(#"Colonne ID_Description_Compte_Produit",{"Description_Compte_Produit"}),
    #"Colonne Reglement Client" = Table.AddColumn(#"Colonne Description_Compte_Produit supprimée", "Reglement_Client", each
if [ID_Debit_Credit] = 1 then "OUI"
else "NON",
type text
),
    #"Colonne Statut Reglement Client" = Table.AddColumn(#"Colonne Reglement Client", "Statut_Reglement_Client", each
if [Reglement_Client] = "OUI" and [EC_Lettrage] = "" then "EC Non Lettrée"
else if [Reglement_Client] = "OUI" and [EC_Lettrage] <> "" then "EC Lettrée"
else if [Reglement_Client] = "NON" and [EC_Lettrage] = "" then "EC Non Lettrée"
else if [Reglement_Client] = "NON" and [EC_Lettrage] <> "" then "EC Lettrée"
else null,
type text
),
    #"Colonne ID_Reglement_Client" = Table.AddColumn(#"Colonne Statut Reglement Client", "ID_Reglement_Client", each
if [Reglement_Client] = "NON" then 1
else 2,
Int64.Type
),
    #"Colonne Reglement_Client supprimée" = Table.RemoveColumns(#"Colonne ID_Reglement_Client",{"Reglement_Client"}),
    #"Colonne ID_Statut_Reglement_Client" = Table.AddColumn(#"Colonne Reglement_Client supprimée", "ID_Statut_Reglement_Client", each
if [Statut_Reglement_Client] = "EC Lettrée" then 1
else 2,
Int64.Type
),
    #"Colonne Statut_Reglement_Client supprimée" = Table.RemoveColumns(#"Colonne ID_Statut_Reglement_Client",{"Statut_Reglement_Client"}),
    #"Requêtes fusionnées4" = Table.NestedJoin(#"Colonne Statut_Reglement_Client supprimée", {"EC_Date"}, DIM_DATE, {"Date"}, "DIM_DATE", JoinKind.LeftOuter),
    #"DIM_DATE développé" = Table.ExpandTableColumn(#"Requêtes fusionnées4", "DIM_DATE", {"Annee_Fiscale_Libelle"}, {"Annee_Fiscale_Libelle"}),
    #"Requêtes fusionnées3" = Table.NestedJoin(#"DIM_DATE développé", {"Numero_Facture"}, FACT_FACTURE_BATIGEST, {"Numero_Facture"}, "FACTURE_BATIGEST", JoinKind.LeftOuter),
    #"FACTURE_BATIGEST développé" = Table.ExpandTableColumn(#"Requêtes fusionnées3", "FACTURE_BATIGEST", {"Date_Facture", "ModReg", "Nb_Jours_Condition_Reglement"}, {"Date_Facture", "ModReg", "Nb_Jours_Condition_Reglement"}),
    #"Colonnes permutées" = Table.ReorderColumns(#"FACTURE_BATIGEST développé",{"Date_Facture", "Journal", "ID_EC", "Date_Periode_Comptable", "Numero_Facture", "Numero_Compte_Comptable", "Nom_du_Tiers", "Intitule_EC", "EC_Echeance", "EC_Montant", "EC_Lettrage", "EC_DateRegle", "Date_Analyse", "Intitule_Compte", "Montant_Facture", "Statut_Tiers", "ID_EC_Chantier", "ID_Debit_Credit", "ID_Description_Journal", "ID_Nature_Compte", "ID_Secteurs", "ID_Description_Compte_Produit", "ID_Reglement_Client", "ID_Statut_Reglement_Client", "Annee_Fiscale_Libelle", "ModReg", "Nb_Jours_Condition_Reglement"}),
    #"Colonne Date_Echeance_Client_Calculee" = Table.AddColumn(#"Colonnes permutées", "Date_Echeance_Client_Calculee", each
let
d = try Date.From([Date_Facture]) otherwise null,
n = try Int64.From([Nb_Jours_Condition_Reglement]) otherwise null
in
if d <> null and n <> null then Date.AddDays(d,n) else null,
type date
),
    #"Colonne Nb Jours Retard Paiement" = Table.AddColumn(
    #"Colonne Date_Echeance_Client_Calculee",
    "Nb_Jours_Retard_Paiement",
    each
        let 
            isDebit     = [ID_Debit_Credit] = 2,                              
            isNonLettre = ([ID_Statut_Reglement_Client] = 2),
            is411       = 
                        let c = try Text.Trim(Text.From([Numero_Compte_Comptable])) otherwise null
                        in c <> null and Text.StartsWith(c, "411"),
            due         = try Date.From([Date_Echeance_Client_Calculee]) otherwise null,
            today       = Date.From(DateTime.LocalNow())
        in
            if isDebit and isNonLettre and is411 and due <> null then
                List.Max({0, Duration.Days(today - due)})  // force mini à 0
            else
                null,
    Int64.Type
),
    #"Requêtes fusionnées1" = Table.NestedJoin(#"Colonne Nb Jours Retard Paiement", {"Nom_du_Tiers_Clean"}, DIM_COMPTE_CLIENT, {"Nom_du_Tiers_Clean"}, "DIM_COMPTE_CLIENT", JoinKind.LeftOuter),
    #"DIM_COMPTE_CLIENT développé" = Table.ExpandTableColumn(#"Requêtes fusionnées1", "DIM_COMPTE_CLIENT", {"ID_Client"}, {"ID_Client"}),
    #"Requêtes fusionnées5" = Table.NestedJoin(#"DIM_COMPTE_CLIENT développé", {"Nom_du_Tiers_Clean"}, DIM_COMPTE_FOURNISSEUR, {"Nom_du_Tiers_Clean"}, "DIM_COMPTE_FOURNISSEUR", JoinKind.LeftOuter),
    #"DIM_COMPTE_FOURNISSEUR développé" = Table.ExpandTableColumn(#"Requêtes fusionnées5", "DIM_COMPTE_FOURNISSEUR", {"ID_Fournisseur"}, {"ID_Fournisseur"}),
    #"Colonne Statut_Creance_Client" = Table.AddColumn(#"DIM_COMPTE_FOURNISSEUR développé", "Statut_Creance_Client", each
let
today = Date.From(DateTime.LocalNow())
in
// Cas 1: créance échue ou en-cours
if [Compte_Client] = "CLIENT"
and [ID_Statut_Reglement_Client] = 2 // EC non lettrée
and [Statut_Tiers] <> "A EXCLURE DES CREANCES CLIENTS"
and [Date_Analyse] >= #date(2025, 4, 1)
and [Date_Analyse] <= #date(2026, 3, 31)
and [ID_Debit_Credit] = 2 // au débit
then 
if today < Date.From([Date_Echeance_Client_Calculee]) then "3_En-cours client"
else "2_Créance échue"
// Cas 2: créance réglée
else if [Compte_Client] = "CLIENT"
and [ID_Statut_Reglement_Client] = 1 // EC lettrée
and [Statut_Tiers] <> "A EXCLURE DES CREANCES CLIENTS"
and [Date_Analyse] >= #date(2025, 4, 1)
and [Date_Analyse] <= #date(2026, 3, 31)
and [ID_Debit_Credit] = 2
then "1_Créance réglée"
else null,
type text
),
    #"Colonne ID_Statut_Creance_Client" = Table.AddColumn(#"Colonne Statut_Creance_Client", "ID_Statut_Creance_Client", each
if [Statut_Creance_Client] = "1_Créance réglée" then 1
else if [Statut_Creance_Client] = "2_Créance échue" then 2
else if [Statut_Creance_Client] = "3_En-cours client" then 3
else null,
Int64.Type
),
    #"Colonne Statut_Creance_Client supprimée" = Table.RemoveColumns(#"Colonne ID_Statut_Creance_Client",{"Statut_Creance_Client"}),
    #"Colonne Avoir_Vrt_Rglt" = Table.AddColumn(#"Colonne Statut_Creance_Client supprimée", "Avoir_Vrt_Rglt", each
if [Compte_Client] = "CLIENT"
and [ID_Statut_Reglement_Client] = 1 
and [Statut_Tiers] <> "A EXCLURE DES CREANCES CLIENTS"
and [Date_Analyse] >= #date(2025, 4, 1)
and [Date_Analyse] <= #date(2026, 3, 31)
and [ID_Debit_Credit] = 1
then "Avoir_Vrt_Rglt"
else null,
type text
)
in
    #"Colonne Avoir_Vrt_Rglt"
